"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/shop/page",{

/***/ "(app-pages-browser)/./lib/product-images.ts":
/*!*******************************!*\
  !*** ./lib/product-images.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getProductImage: () => (/* binding */ getProductImage),\n/* harmony export */   setProductImage: () => (/* binding */ setProductImage)\n/* harmony export */ });\n/* __next_internal_client_entry_do_not_use__ getProductImage,setProductImage auto */ // Map of product groups to category images (fallbacks)\nconst categoryImages = {\n    Laptop: \"/Laptop.jpg?height=300&width=400&text=Laptop\",\n    Tablet: \"/Tablet.jpeg?height=300&width=400&text=Tablet\",\n    Mobile: \"/iphone.jpeg?height=300&width=400&text=Mobile\",\n    Accessories: \"/headphones?height=300&width=400&text=Accessories\"\n};\nconst productImages = {};\n/**\n * Get image for a specific product\n * @param productId - The ID of the product\n * @param group - The category/group of the product\n * @returns The image URL for the product\n */ function getProductImage(productId, group) {\n    // First check if there's a specific image for this product ID\n    if (productId && productImages[productId]) {\n        return productImages[productId];\n    }\n    // If no specific image, use the category image\n    const categoryKey = group === \"Accessory\" ? \"Accessories\" : group;\n    return categoryImages[categoryKey] || \"/placeholder.svg?height=300&width=400&text=Product\";\n}\n// Map of individual product IDs to specific images\n// Add your product IDs and image paths here\nconst productSpecificImages = {\n};\n// Colors for product images to make them visually distinct\nconst colors = [\n    \"FF5733\",\n    \"33FF57\",\n    \"3357FF\",\n    \"F3FF33\",\n    \"FF33F3\",\n    \"33FFF3\",\n    \"FF8C33\",\n    \"8C33FF\",\n    \"33FF8C\",\n    \"FF338C\",\n    \"8CFF33\",\n    \"338CFF\",\n    \"FFCC33\",\n    \"33FFCC\",\n    \"CC33FF\",\n    \"FFCC99\",\n    \"99FFCC\",\n    \"CC99FF\",\n    \"FF99CC\",\n    \"99FF99\"\n];\n/**\n * Add or update an image for a specific product\n * @param productId - The ID of the product\n * @param imageUrl - The URL of the image\n */ function setProductImage(productId, imageUrl) {\n    if (productId && imageUrl) {\n        productSpecificImages[productId] = imageUrl;\n    }\n}\n/**\n * Simple hash function to convert a string to a number\n * @param str - The string to hash\n * @returns A numeric hash code\n */ function hashCode(str) {\n    let hash = 0;\n    for(let i = 0; i < str.length; i++){\n        const char = str.charCodeAt(i);\n        hash = (hash << 5) - hash + char;\n        hash = hash & hash // Convert to 32bit integer\n        ;\n    }\n    return hash;\n} /**\n * USAGE EXAMPLE:\n *\n * To see the actual product IDs in your data, you can log them in the console:\n *\n * In app/shop/page.tsx, add this inside the useEffect where you fetch products:\n *\n * useEffect(() => {\n *   const fetchProducts = async () => {\n *     try {\n *       // ... existing code ...\n *       const data = await response.json()\n *\n *       // Log product IDs to see what they look like\n *       console.log(\"Product IDs:\", data.map(p => p.id))\n *\n *       // ... rest of existing code ...\n *     }\n *   }\n * }, [])\n *\n * Then check your browser console to see the actual IDs.\n */ \n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9wcm9kdWN0LWltYWdlcy50cyIsIm1hcHBpbmdzIjoiOzs7OztxRkFFQSx1REFBdUQ7QUFDdkQsTUFBTUEsaUJBQXlDO0lBQzdDQyxRQUFRO0lBQ1JDLFFBQVE7SUFDUkMsUUFBUTtJQUNSQyxhQUFhO0FBQ2Y7QUFHQSxNQUFNQyxnQkFBd0MsQ0FFOUM7QUFFQTs7Ozs7Q0FLQyxHQUNNLFNBQVNDLGdCQUFnQkMsU0FBaUIsRUFBRUMsS0FBYTtJQUM5RCw4REFBOEQ7SUFDOUQsSUFBSUQsYUFBYUYsYUFBYSxDQUFDRSxVQUFVLEVBQUU7UUFDekMsT0FBT0YsYUFBYSxDQUFDRSxVQUFVO0lBQ2pDO0lBRUEsK0NBQStDO0lBQy9DLE1BQU1FLGNBQWNELFVBQVUsY0FBYyxnQkFBZ0JBO0lBQzVELE9BQU9SLGNBQWMsQ0FBQ1MsWUFBWSxJQUFJO0FBQ3hDO0FBRUEsbURBQW1EO0FBQ25ELDRDQUE0QztBQUM1QyxNQUFNQyx3QkFBZ0Q7QUFHdEQ7QUFFQSwyREFBMkQ7QUFDM0QsTUFBTUMsU0FBUztJQUNiO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDRDtBQUVEOzs7O0NBSUMsR0FDTSxTQUFTQyxnQkFBZ0JMLFNBQWlCLEVBQUVNLFFBQWdCO0lBQ2pFLElBQUlOLGFBQWFNLFVBQVU7UUFDekJILHFCQUFxQixDQUFDSCxVQUFVLEdBQUdNO0lBQ3JDO0FBQ0Y7QUFFQTs7OztDQUlDLEdBQ0QsU0FBU0MsU0FBU0MsR0FBVztJQUMzQixJQUFJQyxPQUFPO0lBQ1gsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlGLElBQUlHLE1BQU0sRUFBRUQsSUFBSztRQUNuQyxNQUFNRSxPQUFPSixJQUFJSyxVQUFVLENBQUNIO1FBQzVCRCxPQUFPLENBQUNBLFFBQVEsS0FBS0EsT0FBT0c7UUFDNUJILE9BQU9BLE9BQU9BLEtBQUssMkJBQTJCOztJQUNoRDtJQUNBLE9BQU9BO0FBQ1QsRUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXNCQyIsInNvdXJjZXMiOlsiL1VzZXJzL2lzaGl0YXNpbmhhL0RvY3VtZW50cy9HaXRIdWIvUmVmdXJiVGVjaC9saWIvcHJvZHVjdC1pbWFnZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcblxuLy8gTWFwIG9mIHByb2R1Y3QgZ3JvdXBzIHRvIGNhdGVnb3J5IGltYWdlcyAoZmFsbGJhY2tzKVxuY29uc3QgY2F0ZWdvcnlJbWFnZXM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XG4gIExhcHRvcDogXCIvTGFwdG9wLmpwZz9oZWlnaHQ9MzAwJndpZHRoPTQwMCZ0ZXh0PUxhcHRvcFwiLFxuICBUYWJsZXQ6IFwiL1RhYmxldC5qcGVnP2hlaWdodD0zMDAmd2lkdGg9NDAwJnRleHQ9VGFibGV0XCIsXG4gIE1vYmlsZTogXCIvaXBob25lLmpwZWc/aGVpZ2h0PTMwMCZ3aWR0aD00MDAmdGV4dD1Nb2JpbGVcIixcbiAgQWNjZXNzb3JpZXM6IFwiL2hlYWRwaG9uZXM/aGVpZ2h0PTMwMCZ3aWR0aD00MDAmdGV4dD1BY2Nlc3Nvcmllc1wiLFxufVxuXG5cbmNvbnN0IHByb2R1Y3RJbWFnZXM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XG4gXG59XG5cbi8qKlxuICogR2V0IGltYWdlIGZvciBhIHNwZWNpZmljIHByb2R1Y3RcbiAqIEBwYXJhbSBwcm9kdWN0SWQgLSBUaGUgSUQgb2YgdGhlIHByb2R1Y3RcbiAqIEBwYXJhbSBncm91cCAtIFRoZSBjYXRlZ29yeS9ncm91cCBvZiB0aGUgcHJvZHVjdFxuICogQHJldHVybnMgVGhlIGltYWdlIFVSTCBmb3IgdGhlIHByb2R1Y3RcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFByb2R1Y3RJbWFnZShwcm9kdWN0SWQ6IHN0cmluZywgZ3JvdXA6IHN0cmluZyk6IHN0cmluZyB7XG4gIC8vIEZpcnN0IGNoZWNrIGlmIHRoZXJlJ3MgYSBzcGVjaWZpYyBpbWFnZSBmb3IgdGhpcyBwcm9kdWN0IElEXG4gIGlmIChwcm9kdWN0SWQgJiYgcHJvZHVjdEltYWdlc1twcm9kdWN0SWRdKSB7XG4gICAgcmV0dXJuIHByb2R1Y3RJbWFnZXNbcHJvZHVjdElkXVxuICB9XG5cbiAgLy8gSWYgbm8gc3BlY2lmaWMgaW1hZ2UsIHVzZSB0aGUgY2F0ZWdvcnkgaW1hZ2VcbiAgY29uc3QgY2F0ZWdvcnlLZXkgPSBncm91cCA9PT0gXCJBY2Nlc3NvcnlcIiA/IFwiQWNjZXNzb3JpZXNcIiA6IGdyb3VwXG4gIHJldHVybiBjYXRlZ29yeUltYWdlc1tjYXRlZ29yeUtleV0gfHwgXCIvcGxhY2Vob2xkZXIuc3ZnP2hlaWdodD0zMDAmd2lkdGg9NDAwJnRleHQ9UHJvZHVjdFwiXG59XG5cbi8vIE1hcCBvZiBpbmRpdmlkdWFsIHByb2R1Y3QgSURzIHRvIHNwZWNpZmljIGltYWdlc1xuLy8gQWRkIHlvdXIgcHJvZHVjdCBJRHMgYW5kIGltYWdlIHBhdGhzIGhlcmVcbmNvbnN0IHByb2R1Y3RTcGVjaWZpY0ltYWdlczogUmVjb3JkPHN0cmluZywgc3RyaW5nPiA9IHtcbiAgLy8gRXhhbXBsZTogXCJwcm9kdWN0LWlkLTFcIjogXCIvaW1hZ2VzL3NwZWNpZmljLXByb2R1Y3QtMS5qcGdcIixcbiAgLy8gRXhhbXBsZTogXCJwcm9kdWN0LWlkLTJcIjogXCIvaW1hZ2VzL3NwZWNpZmljLXByb2R1Y3QtMi5qcGdcIixcbn1cblxuLy8gQ29sb3JzIGZvciBwcm9kdWN0IGltYWdlcyB0byBtYWtlIHRoZW0gdmlzdWFsbHkgZGlzdGluY3RcbmNvbnN0IGNvbG9ycyA9IFtcbiAgXCJGRjU3MzNcIixcbiAgXCIzM0ZGNTdcIixcbiAgXCIzMzU3RkZcIixcbiAgXCJGM0ZGMzNcIixcbiAgXCJGRjMzRjNcIixcbiAgXCIzM0ZGRjNcIixcbiAgXCJGRjhDMzNcIixcbiAgXCI4QzMzRkZcIixcbiAgXCIzM0ZGOENcIixcbiAgXCJGRjMzOENcIixcbiAgXCI4Q0ZGMzNcIixcbiAgXCIzMzhDRkZcIixcbiAgXCJGRkNDMzNcIixcbiAgXCIzM0ZGQ0NcIixcbiAgXCJDQzMzRkZcIixcbiAgXCJGRkNDOTlcIixcbiAgXCI5OUZGQ0NcIixcbiAgXCJDQzk5RkZcIixcbiAgXCJGRjk5Q0NcIixcbiAgXCI5OUZGOTlcIixcbl1cblxuLyoqXG4gKiBBZGQgb3IgdXBkYXRlIGFuIGltYWdlIGZvciBhIHNwZWNpZmljIHByb2R1Y3RcbiAqIEBwYXJhbSBwcm9kdWN0SWQgLSBUaGUgSUQgb2YgdGhlIHByb2R1Y3RcbiAqIEBwYXJhbSBpbWFnZVVybCAtIFRoZSBVUkwgb2YgdGhlIGltYWdlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRQcm9kdWN0SW1hZ2UocHJvZHVjdElkOiBzdHJpbmcsIGltYWdlVXJsOiBzdHJpbmcpOiB2b2lkIHtcbiAgaWYgKHByb2R1Y3RJZCAmJiBpbWFnZVVybCkge1xuICAgIHByb2R1Y3RTcGVjaWZpY0ltYWdlc1twcm9kdWN0SWRdID0gaW1hZ2VVcmxcbiAgfVxufVxuXG4vKipcbiAqIFNpbXBsZSBoYXNoIGZ1bmN0aW9uIHRvIGNvbnZlcnQgYSBzdHJpbmcgdG8gYSBudW1iZXJcbiAqIEBwYXJhbSBzdHIgLSBUaGUgc3RyaW5nIHRvIGhhc2hcbiAqIEByZXR1cm5zIEEgbnVtZXJpYyBoYXNoIGNvZGVcbiAqL1xuZnVuY3Rpb24gaGFzaENvZGUoc3RyOiBzdHJpbmcpOiBudW1iZXIge1xuICBsZXQgaGFzaCA9IDBcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBjaGFyID0gc3RyLmNoYXJDb2RlQXQoaSlcbiAgICBoYXNoID0gKGhhc2ggPDwgNSkgLSBoYXNoICsgY2hhclxuICAgIGhhc2ggPSBoYXNoICYgaGFzaCAvLyBDb252ZXJ0IHRvIDMyYml0IGludGVnZXJcbiAgfVxuICByZXR1cm4gaGFzaFxufVxuXG4vKipcbiAqIFVTQUdFIEVYQU1QTEU6XG4gKlxuICogVG8gc2VlIHRoZSBhY3R1YWwgcHJvZHVjdCBJRHMgaW4geW91ciBkYXRhLCB5b3UgY2FuIGxvZyB0aGVtIGluIHRoZSBjb25zb2xlOlxuICpcbiAqIEluIGFwcC9zaG9wL3BhZ2UudHN4LCBhZGQgdGhpcyBpbnNpZGUgdGhlIHVzZUVmZmVjdCB3aGVyZSB5b3UgZmV0Y2ggcHJvZHVjdHM6XG4gKlxuICogdXNlRWZmZWN0KCgpID0+IHtcbiAqICAgY29uc3QgZmV0Y2hQcm9kdWN0cyA9IGFzeW5jICgpID0+IHtcbiAqICAgICB0cnkge1xuICogICAgICAgLy8gLi4uIGV4aXN0aW5nIGNvZGUgLi4uXG4gKiAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gKlxuICogICAgICAgLy8gTG9nIHByb2R1Y3QgSURzIHRvIHNlZSB3aGF0IHRoZXkgbG9vayBsaWtlXG4gKiAgICAgICBjb25zb2xlLmxvZyhcIlByb2R1Y3QgSURzOlwiLCBkYXRhLm1hcChwID0+IHAuaWQpKVxuICpcbiAqICAgICAgIC8vIC4uLiByZXN0IG9mIGV4aXN0aW5nIGNvZGUgLi4uXG4gKiAgICAgfVxuICogICB9XG4gKiB9LCBbXSlcbiAqXG4gKiBUaGVuIGNoZWNrIHlvdXIgYnJvd3NlciBjb25zb2xlIHRvIHNlZSB0aGUgYWN0dWFsIElEcy5cbiAqL1xuXG4iXSwibmFtZXMiOlsiY2F0ZWdvcnlJbWFnZXMiLCJMYXB0b3AiLCJUYWJsZXQiLCJNb2JpbGUiLCJBY2Nlc3NvcmllcyIsInByb2R1Y3RJbWFnZXMiLCJnZXRQcm9kdWN0SW1hZ2UiLCJwcm9kdWN0SWQiLCJncm91cCIsImNhdGVnb3J5S2V5IiwicHJvZHVjdFNwZWNpZmljSW1hZ2VzIiwiY29sb3JzIiwic2V0UHJvZHVjdEltYWdlIiwiaW1hZ2VVcmwiLCJoYXNoQ29kZSIsInN0ciIsImhhc2giLCJpIiwibGVuZ3RoIiwiY2hhciIsImNoYXJDb2RlQXQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/product-images.ts\n"));

/***/ })

});