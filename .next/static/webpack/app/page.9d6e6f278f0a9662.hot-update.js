"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/product-images.ts":
/*!*******************************!*\
  !*** ./lib/product-images.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getProductImage: () => (/* binding */ getProductImage),\n/* harmony export */   setProductImage: () => (/* binding */ setProductImage)\n/* harmony export */ });\n/* __next_internal_client_entry_do_not_use__ getProductImage,setProductImage auto */ // Map of product groups to category images (fallbacks)\nconst categoryImages = {\n    Laptop: \"/Laptop.jpg?height=300&width=400&text=Laptop\",\n    Tablet: \"/placeholder.svg?height=300&width=400&text=Tablet\",\n    Mobile: \"/placeholder.svg?height=300&width=400&text=Mobile\",\n    Accessories: \"/placeholder.svg?height=300&width=400&text=Accessories\"\n};\nconst productImages = {};\n/**\n * Get image for a specific product\n * @param productId - The ID of the product\n * @param group - The category/group of the product\n * @returns The image URL for the product\n */ function getProductImage(productId, group) {\n    // First check if there's a specific image for this product ID\n    if (productId && productImages[productId]) {\n        return productImages[productId];\n    }\n    // If no specific image, use the category image\n    const categoryKey = group === \"Accessory\" ? \"Accessories\" : group;\n    return categoryImages[categoryKey] || \"/placeholder.svg?height=300&width=400&text=Product\";\n}\n// Map of individual product IDs to specific images\n// Add your product IDs and image paths here\nconst productSpecificImages = {\n};\n// Colors for product images to make them visually distinct\nconst colors = [\n    \"FF5733\",\n    \"33FF57\",\n    \"3357FF\",\n    \"F3FF33\",\n    \"FF33F3\",\n    \"33FFF3\",\n    \"FF8C33\",\n    \"8C33FF\",\n    \"33FF8C\",\n    \"FF338C\",\n    \"8CFF33\",\n    \"338CFF\",\n    \"FFCC33\",\n    \"33FFCC\",\n    \"CC33FF\",\n    \"FFCC99\",\n    \"99FFCC\",\n    \"CC99FF\",\n    \"FF99CC\",\n    \"99FF99\"\n];\n/**\n * Add or update an image for a specific product\n * @param productId - The ID of the product\n * @param imageUrl - The URL of the image\n */ function setProductImage(productId, imageUrl) {\n    if (productId && imageUrl) {\n        productSpecificImages[productId] = imageUrl;\n    }\n}\n/**\n * Simple hash function to convert a string to a number\n * @param str - The string to hash\n * @returns A numeric hash code\n */ function hashCode(str) {\n    let hash = 0;\n    for(let i = 0; i < str.length; i++){\n        const char = str.charCodeAt(i);\n        hash = (hash << 5) - hash + char;\n        hash = hash & hash // Convert to 32bit integer\n        ;\n    }\n    return hash;\n} /**\n * USAGE EXAMPLE:\n *\n * To see the actual product IDs in your data, you can log them in the console:\n *\n * In app/shop/page.tsx, add this inside the useEffect where you fetch products:\n *\n * useEffect(() => {\n *   const fetchProducts = async () => {\n *     try {\n *       // ... existing code ...\n *       const data = await response.json()\n *\n *       // Log product IDs to see what they look like\n *       console.log(\"Product IDs:\", data.map(p => p.id))\n *\n *       // ... rest of existing code ...\n *     }\n *   }\n * }, [])\n *\n * Then check your browser console to see the actual IDs.\n */ \n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9wcm9kdWN0LWltYWdlcy50cyIsIm1hcHBpbmdzIjoiOzs7OztxRkFFQSx1REFBdUQ7QUFDdkQsTUFBTUEsaUJBQXlDO0lBQzdDQyxRQUFRO0lBQ1JDLFFBQVE7SUFDUkMsUUFBUTtJQUNSQyxhQUFhO0FBQ2Y7QUFHQSxNQUFNQyxnQkFBd0MsQ0FFOUM7QUFFQTs7Ozs7Q0FLQyxHQUNNLFNBQVNDLGdCQUFnQkMsU0FBaUIsRUFBRUMsS0FBYTtJQUM5RCw4REFBOEQ7SUFDOUQsSUFBSUQsYUFBYUYsYUFBYSxDQUFDRSxVQUFVLEVBQUU7UUFDekMsT0FBT0YsYUFBYSxDQUFDRSxVQUFVO0lBQ2pDO0lBRUEsK0NBQStDO0lBQy9DLE1BQU1FLGNBQWNELFVBQVUsY0FBYyxnQkFBZ0JBO0lBQzVELE9BQU9SLGNBQWMsQ0FBQ1MsWUFBWSxJQUFJO0FBQ3hDO0FBRUEsbURBQW1EO0FBQ25ELDRDQUE0QztBQUM1QyxNQUFNQyx3QkFBZ0Q7QUFHdEQ7QUFFQSwyREFBMkQ7QUFDM0QsTUFBTUMsU0FBUztJQUNiO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDRDtBQUVEOzs7O0NBSUMsR0FDTSxTQUFTQyxnQkFBZ0JMLFNBQWlCLEVBQUVNLFFBQWdCO0lBQ2pFLElBQUlOLGFBQWFNLFVBQVU7UUFDekJILHFCQUFxQixDQUFDSCxVQUFVLEdBQUdNO0lBQ3JDO0FBQ0Y7QUFFQTs7OztDQUlDLEdBQ0QsU0FBU0MsU0FBU0MsR0FBVztJQUMzQixJQUFJQyxPQUFPO0lBQ1gsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlGLElBQUlHLE1BQU0sRUFBRUQsSUFBSztRQUNuQyxNQUFNRSxPQUFPSixJQUFJSyxVQUFVLENBQUNIO1FBQzVCRCxPQUFPLENBQUNBLFFBQVEsS0FBS0EsT0FBT0c7UUFDNUJILE9BQU9BLE9BQU9BLEtBQUssMkJBQTJCOztJQUNoRDtJQUNBLE9BQU9BO0FBQ1QsRUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXNCQyIsInNvdXJjZXMiOlsiL1VzZXJzL2lzaGl0YXNpbmhhL0RvY3VtZW50cy9HaXRIdWIvUmVmdXJiVGVjaC9saWIvcHJvZHVjdC1pbWFnZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcblxuLy8gTWFwIG9mIHByb2R1Y3QgZ3JvdXBzIHRvIGNhdGVnb3J5IGltYWdlcyAoZmFsbGJhY2tzKVxuY29uc3QgY2F0ZWdvcnlJbWFnZXM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XG4gIExhcHRvcDogXCIvTGFwdG9wLmpwZz9oZWlnaHQ9MzAwJndpZHRoPTQwMCZ0ZXh0PUxhcHRvcFwiLFxuICBUYWJsZXQ6IFwiL3BsYWNlaG9sZGVyLnN2Zz9oZWlnaHQ9MzAwJndpZHRoPTQwMCZ0ZXh0PVRhYmxldFwiLFxuICBNb2JpbGU6IFwiL3BsYWNlaG9sZGVyLnN2Zz9oZWlnaHQ9MzAwJndpZHRoPTQwMCZ0ZXh0PU1vYmlsZVwiLFxuICBBY2Nlc3NvcmllczogXCIvcGxhY2Vob2xkZXIuc3ZnP2hlaWdodD0zMDAmd2lkdGg9NDAwJnRleHQ9QWNjZXNzb3JpZXNcIixcbn1cblxuXG5jb25zdCBwcm9kdWN0SW1hZ2VzOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge1xuIFxufVxuXG4vKipcbiAqIEdldCBpbWFnZSBmb3IgYSBzcGVjaWZpYyBwcm9kdWN0XG4gKiBAcGFyYW0gcHJvZHVjdElkIC0gVGhlIElEIG9mIHRoZSBwcm9kdWN0XG4gKiBAcGFyYW0gZ3JvdXAgLSBUaGUgY2F0ZWdvcnkvZ3JvdXAgb2YgdGhlIHByb2R1Y3RcbiAqIEByZXR1cm5zIFRoZSBpbWFnZSBVUkwgZm9yIHRoZSBwcm9kdWN0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRQcm9kdWN0SW1hZ2UocHJvZHVjdElkOiBzdHJpbmcsIGdyb3VwOiBzdHJpbmcpOiBzdHJpbmcge1xuICAvLyBGaXJzdCBjaGVjayBpZiB0aGVyZSdzIGEgc3BlY2lmaWMgaW1hZ2UgZm9yIHRoaXMgcHJvZHVjdCBJRFxuICBpZiAocHJvZHVjdElkICYmIHByb2R1Y3RJbWFnZXNbcHJvZHVjdElkXSkge1xuICAgIHJldHVybiBwcm9kdWN0SW1hZ2VzW3Byb2R1Y3RJZF1cbiAgfVxuXG4gIC8vIElmIG5vIHNwZWNpZmljIGltYWdlLCB1c2UgdGhlIGNhdGVnb3J5IGltYWdlXG4gIGNvbnN0IGNhdGVnb3J5S2V5ID0gZ3JvdXAgPT09IFwiQWNjZXNzb3J5XCIgPyBcIkFjY2Vzc29yaWVzXCIgOiBncm91cFxuICByZXR1cm4gY2F0ZWdvcnlJbWFnZXNbY2F0ZWdvcnlLZXldIHx8IFwiL3BsYWNlaG9sZGVyLnN2Zz9oZWlnaHQ9MzAwJndpZHRoPTQwMCZ0ZXh0PVByb2R1Y3RcIlxufVxuXG4vLyBNYXAgb2YgaW5kaXZpZHVhbCBwcm9kdWN0IElEcyB0byBzcGVjaWZpYyBpbWFnZXNcbi8vIEFkZCB5b3VyIHByb2R1Y3QgSURzIGFuZCBpbWFnZSBwYXRocyBoZXJlXG5jb25zdCBwcm9kdWN0U3BlY2lmaWNJbWFnZXM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XG4gIC8vIEV4YW1wbGU6IFwicHJvZHVjdC1pZC0xXCI6IFwiL2ltYWdlcy9zcGVjaWZpYy1wcm9kdWN0LTEuanBnXCIsXG4gIC8vIEV4YW1wbGU6IFwicHJvZHVjdC1pZC0yXCI6IFwiL2ltYWdlcy9zcGVjaWZpYy1wcm9kdWN0LTIuanBnXCIsXG59XG5cbi8vIENvbG9ycyBmb3IgcHJvZHVjdCBpbWFnZXMgdG8gbWFrZSB0aGVtIHZpc3VhbGx5IGRpc3RpbmN0XG5jb25zdCBjb2xvcnMgPSBbXG4gIFwiRkY1NzMzXCIsXG4gIFwiMzNGRjU3XCIsXG4gIFwiMzM1N0ZGXCIsXG4gIFwiRjNGRjMzXCIsXG4gIFwiRkYzM0YzXCIsXG4gIFwiMzNGRkYzXCIsXG4gIFwiRkY4QzMzXCIsXG4gIFwiOEMzM0ZGXCIsXG4gIFwiMzNGRjhDXCIsXG4gIFwiRkYzMzhDXCIsXG4gIFwiOENGRjMzXCIsXG4gIFwiMzM4Q0ZGXCIsXG4gIFwiRkZDQzMzXCIsXG4gIFwiMzNGRkNDXCIsXG4gIFwiQ0MzM0ZGXCIsXG4gIFwiRkZDQzk5XCIsXG4gIFwiOTlGRkNDXCIsXG4gIFwiQ0M5OUZGXCIsXG4gIFwiRkY5OUNDXCIsXG4gIFwiOTlGRjk5XCIsXG5dXG5cbi8qKlxuICogQWRkIG9yIHVwZGF0ZSBhbiBpbWFnZSBmb3IgYSBzcGVjaWZpYyBwcm9kdWN0XG4gKiBAcGFyYW0gcHJvZHVjdElkIC0gVGhlIElEIG9mIHRoZSBwcm9kdWN0XG4gKiBAcGFyYW0gaW1hZ2VVcmwgLSBUaGUgVVJMIG9mIHRoZSBpbWFnZVxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0UHJvZHVjdEltYWdlKHByb2R1Y3RJZDogc3RyaW5nLCBpbWFnZVVybDogc3RyaW5nKTogdm9pZCB7XG4gIGlmIChwcm9kdWN0SWQgJiYgaW1hZ2VVcmwpIHtcbiAgICBwcm9kdWN0U3BlY2lmaWNJbWFnZXNbcHJvZHVjdElkXSA9IGltYWdlVXJsXG4gIH1cbn1cblxuLyoqXG4gKiBTaW1wbGUgaGFzaCBmdW5jdGlvbiB0byBjb252ZXJ0IGEgc3RyaW5nIHRvIGEgbnVtYmVyXG4gKiBAcGFyYW0gc3RyIC0gVGhlIHN0cmluZyB0byBoYXNoXG4gKiBAcmV0dXJucyBBIG51bWVyaWMgaGFzaCBjb2RlXG4gKi9cbmZ1bmN0aW9uIGhhc2hDb2RlKHN0cjogc3RyaW5nKTogbnVtYmVyIHtcbiAgbGV0IGhhc2ggPSAwXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgY2hhciA9IHN0ci5jaGFyQ29kZUF0KGkpXG4gICAgaGFzaCA9IChoYXNoIDw8IDUpIC0gaGFzaCArIGNoYXJcbiAgICBoYXNoID0gaGFzaCAmIGhhc2ggLy8gQ29udmVydCB0byAzMmJpdCBpbnRlZ2VyXG4gIH1cbiAgcmV0dXJuIGhhc2hcbn1cblxuLyoqXG4gKiBVU0FHRSBFWEFNUExFOlxuICpcbiAqIFRvIHNlZSB0aGUgYWN0dWFsIHByb2R1Y3QgSURzIGluIHlvdXIgZGF0YSwgeW91IGNhbiBsb2cgdGhlbSBpbiB0aGUgY29uc29sZTpcbiAqXG4gKiBJbiBhcHAvc2hvcC9wYWdlLnRzeCwgYWRkIHRoaXMgaW5zaWRlIHRoZSB1c2VFZmZlY3Qgd2hlcmUgeW91IGZldGNoIHByb2R1Y3RzOlxuICpcbiAqIHVzZUVmZmVjdCgoKSA9PiB7XG4gKiAgIGNvbnN0IGZldGNoUHJvZHVjdHMgPSBhc3luYyAoKSA9PiB7XG4gKiAgICAgdHJ5IHtcbiAqICAgICAgIC8vIC4uLiBleGlzdGluZyBjb2RlIC4uLlxuICogICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICpcbiAqICAgICAgIC8vIExvZyBwcm9kdWN0IElEcyB0byBzZWUgd2hhdCB0aGV5IGxvb2sgbGlrZVxuICogICAgICAgY29uc29sZS5sb2coXCJQcm9kdWN0IElEczpcIiwgZGF0YS5tYXAocCA9PiBwLmlkKSlcbiAqXG4gKiAgICAgICAvLyAuLi4gcmVzdCBvZiBleGlzdGluZyBjb2RlIC4uLlxuICogICAgIH1cbiAqICAgfVxuICogfSwgW10pXG4gKlxuICogVGhlbiBjaGVjayB5b3VyIGJyb3dzZXIgY29uc29sZSB0byBzZWUgdGhlIGFjdHVhbCBJRHMuXG4gKi9cblxuIl0sIm5hbWVzIjpbImNhdGVnb3J5SW1hZ2VzIiwiTGFwdG9wIiwiVGFibGV0IiwiTW9iaWxlIiwiQWNjZXNzb3JpZXMiLCJwcm9kdWN0SW1hZ2VzIiwiZ2V0UHJvZHVjdEltYWdlIiwicHJvZHVjdElkIiwiZ3JvdXAiLCJjYXRlZ29yeUtleSIsInByb2R1Y3RTcGVjaWZpY0ltYWdlcyIsImNvbG9ycyIsInNldFByb2R1Y3RJbWFnZSIsImltYWdlVXJsIiwiaGFzaENvZGUiLCJzdHIiLCJoYXNoIiwiaSIsImxlbmd0aCIsImNoYXIiLCJjaGFyQ29kZUF0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/product-images.ts\n"));

/***/ })

});